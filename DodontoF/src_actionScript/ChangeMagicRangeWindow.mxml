<?xml version="1.0" encoding="utf-8"?>
<torgtaitai:CommonPopupWindow
   xmlns:mx="http://www.adobe.com/2006/mxml"
   xmlns:torgtaitai="*" 
   width="500"
   height="300"
   title="魔法範囲変更" 
   showCloseButton="true"
   >


  <mx:Form>
	<mx:FormItem label="名前:">
	  <mx:TextInput id="magicRangeName" text="" />
	</mx:FormItem>
	<mx:FormItem label="半径(5ft.単位):">
	  <mx:NumericStepper id="magicRangeFeets" minimum="5" maximum="100" value="5" stepSize="5" />
	</mx:FormItem>
	<mx:FormItem label="範囲種別:">
      <mx:ComboBox id="magicRangeType" width="100" editable="false">
        <mx:Object data="circle" label="円" />
        <mx:Object data="corn1" label="円錐型(右上)" />
        <mx:Object data="corn2" label="円錐型(右)" />
        <mx:Object data="corn3" label="円錐型(右下)" />
        <mx:Object data="corn4" label="円錐型(下)" />
        <mx:Object data="corn5" label="円錐型(左下)" />
        <mx:Object data="corn6" label="円錐型(左)" />
        <mx:Object data="corn7" label="円錐型(左上)" />
        <mx:Object data="corn8" label="円錐型(上)" />
        <mx:Object data="square" label="四角" />
      </mx:ComboBox>
	</mx:FormItem>
	<mx:FormItem label="色:">
    <mx:ColorPicker id="magicRangeColorPicker" showTextField="true" selectedColor="0x000000" />
	</mx:FormItem>
	<mx:FormItem label="残り時間／持続時間:">
      <mx:HBox width="100%" height="100%">
	    <mx:Label id="magicRangeRestTime" text="0" />
	    <mx:Label text="／" />
	    <mx:NumericStepper id="magicRangeTimeRange" minimum="1" maximum="99" value="1" change="setMagicRangeRestTime()" />
      </mx:HBox>
	</mx:FormItem>
	<mx:FormItem label="その他:">
	  <mx:TextInput id="magicRangeInfo" text="" />
	</mx:FormItem>
  </mx:Form>
  
  <mx:HBox height="30" width="100%" horizontalAlign="center" verticalAlign="middle">
    <mx:Button label="変更" click="this.changeMagicRange()" />
    <mx:Button label="キャンセル" click="PopUpManager.removePopUp(this)" />
  </mx:HBox>

  <mx:Script>
    <![CDATA[
    import mx.containers.TitleWindow;
    import mx.managers.PopUpManager;
    import mx.collections.ArrayCollection;
    
    private static var magicRange:MagicRange;
    public static function setMagicRange(magicRange_:MagicRange):void {
        magicRange = magicRange_;
    }

    override protected function setup():void {
        magicRangeName.text = magicRange.getName();
        magicRangeFeets.value = magicRange.getFeets();
    
        selectMagicRangeType(magicRangeType, magicRange.getRangeType());

        magicRangeColorPicker.selectedColor = magicRange.getColor();
        magicRangeTimeRange.value = magicRange.getTimeRange();
        setMagicRangeRestTime();
        magicRangeInfo.text = magicRange.getInfo();
    }

    static public function selectMagicRangeType(magicRangeTypeLocal:Object, targetType:String):void {
        var list:ArrayCollection = magicRangeTypeLocal.dataProvider as  ArrayCollection;
        for (var i:int=0; i < list.length ;i++){
            Log.logging("list[i].data", list[i].data);
            Log.logging("targetType", targetType);
            if(list[i].data == targetType){
                magicRangeTypeLocal.selectedIndex = i;
                Log.logging("magicRangeTypeLocal.selectedIndex", magicRangeTypeLocal.selectedIndex);
                return;
            }
        }
    }

    public function setMagicRangeRestTime():void {
        var timeRange:int = magicRangeTimeRange.value;
        var restRound:int = MagicRange.getRestRound( timeRange,
                                                     magicRange.getCreateRound(),
                                                     magicRange.getInitiative() );
        magicRangeRestTime.text = "" + restRound
    }

    public function changeMagicRange():void {
        try{
            var guiInputSender:GuiInputSender = DodontoF_Main.getInstance().getGuiInputSender();

            guiInputSender.changeMagicRange(
                                            magicRange,
                                            magicRangeName.text,
                                            magicRangeFeets.value,
                                            magicRangeType.selectedItem.data,
                                            ("0x" + magicRangeColorPicker.selectedColor.toString(16)),
                                            magicRangeInfo.text,
                                            magicRangeTimeRange.value);

            PopUpManager.removePopUp(this);
        } catch(error:Error) {
            this.status = error.message;
        }
    }

    ]]>
  </mx:Script>
    
</torgtaitai:CommonPopupWindow>
